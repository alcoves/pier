datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum MediaStatus {
  READY
  ERROR
  CREATED
  UPLOADED
  UPLOADING
  PROCESSING
}

enum PodRole {
  OWNER
  MEMBER
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  username  String
  image     String?
  pods      PodUsers[]
  videos    Video[]
  isAdmin   Boolean    @default(false)
  updatedAt DateTime   @updatedAt
  createdAt DateTime   @default(now())
}

model Video {
  id           String      @id @default(cuid())
  size         Int         @default(0) // Size in megabytes
  length       Float       @default(0)
  views        Int         @default(0)
  progress     Float       @default(0)
  width        Int         @default(0)
  height       Int         @default(0)
  framerate    Int         @default(0)
  type         String      @default("")
  cdnUrl       String      @default("")
  archivePath  String      @default("")
  thumbnailUrl String      @default("")
  title        String      @default("New upload")
  status       MediaStatus @default(CREATED)
  userId       String
  user         User        @relation(fields: [userId], references: [id])
  updatedAt    DateTime    @updatedAt
  metadata     Json?
  createdAt    DateTime    @default(now())
  pods         Pod[]

  @@unique([id, createdAt])
}

model PodUsers {
  user   User    @relation(fields: [userId], references: [id])
  userId String
  pod    Pod     @relation(fields: [podId], references: [id], onDelete: Cascade)
  podId  String
  role   PodRole

  @@unique([userId, podId])
}

model Pod {
  id              String     @id @default(cuid())
  name            String     @default("New Pod")
  isCollaborative Boolean    @default(false)
  users           PodUsers[]
  videos          Video[]
}
